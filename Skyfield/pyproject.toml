[build-system]
requires = ["setuptools>=61.0,<66", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "skyfield-satellite-analysis"
version = "0.1.0"
description = "Satellite contamination analysis tools for astronomical observations using Skyfield and Lumos"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Aysu Ece Saricaoglu", email = "a.saricaoglu@wustl.edu"},
]
maintainers = [
    {name = "Aysu Ece Saricaoglu", email = "a.saricaoglu@wustl.edu"},
]
keywords = [
    "astronomy",
    "satellites",
    "skyfield",
    "lumos",
    "starlink",
    "contamination",
    "rubin",
    "lsst"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Astronomy",
]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.24.0",
    "astropy>=5.0.0",
    "skyfield>=1.40",
    "matplotlib>=3.5.0",
    "scipy>=1.9.0",
    "requests>=2.25.0",
    "opencv-python>=4.5.0",
    "pytz",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
    "pre-commit",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme",
    "myst-parser",
]
analysis = [
    "jupyter",
    "ipykernel",
    "pandas",
    "seaborn",
    "plotly",
]

[project.urls]
Homepage = "https://github.com/AstroMusers/RubinsForge"
Repository = "https://github.com/AstroMusers/RubinsForge"
Documentation = "https://github.com/AstroMusers/RubinsForge/tree/main/Skyfield"
Issues = "https://github.com/AstroMusers/RubinsForge/issues"

[project.scripts]
skyfield-contamination = "src.scripts.contamination_analysis:main"
skyfield-brightness = "src.scripts.brightness_calculation:main"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.dat", "*.bsp", "*.fits"]

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]




# MyPy type checking
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "skyfield.*",
    "lumos.*",
    "astropy.*",
    "cv2.*",
]
ignore_missing_imports = true

# Flake8 linting (via setup.cfg alternative)
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
]